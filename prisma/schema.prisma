generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type ordersCustomer {
  fullname String
  phone    String
  address  String
  province String
  district String
  ward     String
}

type ordersProducts {
  id       String @db.ObjectId
  quantity Int
  discount Int
  image    String
  name     String
  price    Float
}

model users {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  role      Role      @default(USER)
  email     String
  username  String?
  phone     String?   @unique
  fullname  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  addresses address[]
  orders    orders[]

  @@index([email], name: "email")
}

model address {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  customer  ordersCustomer
  isDefault Boolean?       @default(false)
  user      users?         @relation(fields: [userId], references: [id])
  userId    String?        @db.ObjectId

  @@unique([userId, isDefault])
}

model categories {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  isActive Boolean    @default(true)
  slug     String     @unique
  title    String
  images   String[]
  products products[]

  @@unique([slug, title])
}

model products {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  category    String     @db.ObjectId
  categories  categories @relation(fields: [category], references: [id])
  images      String[]
  name        String
  description String
  price       Float
  discount    Int
  quantity    Int
  sold        Int
  ranking     Float
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@unique([category, name])
}

model orders {
  id           String           @id @default(auto()) @map("_id") @db.ObjectId
  customer     ordersCustomer
  orderID      String
  orderDate    DateTime
  products     ordersProducts[]
  order_status OrderStatus      @default(PENDING)
  total_price  Float
  user         users?           @relation(fields: [userId], references: [id])
  userId       String?          @db.ObjectId
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt

  @@unique([userId, orderID])
}

enum Role {
  ADMIN
  USER
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPING
  DELIVERED
  CANCELLED
}
